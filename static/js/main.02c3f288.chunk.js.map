{"version":3,"sources":["Components/Quiz/Timer/styled.js","Components/Quiz/Timer/index.jsx","Components/Quiz/CourseHeader/styled.js","Components/Quiz/CourseHeader/index.jsx","Components/Quiz/Message/index.jsx","Components/Quiz/QuestionSection/styled.js","Components/Quiz/Spinner/images/above_average.png","Components/Quiz/Timer/Timer.jsx","Components/Layout/Dashboard/UserContext.js","utilities/Queue.js","images/quiz_board.svg","images/question.svg","images/excellent.svg","images/good.svg","images/poor.svg","images/arrow_forward.svg","images/alarm.svg","images/replay.svg","Components/Quiz/Timer/ChangingProgressProvider.jsx","Components/RatingIcon/index.jsx","hooks/useSpeechRecognition.js","utilities/debounce.js","Components/Quiz/QuestionSection/index.jsx","Components/Layout/Dashboard/index.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["styled","div","keyframes","shake","h3","props","background","momentDurationFormatSetup","moment","useStyles","makeStyles","root","width","position","top","Timer","duration","updateDuration","React","useState","progress","setProgress","Number","time","setTime","setTimerColor","factor","Math","floor","useEffect","id","setInterval","changeColor","clearInterval","round","format","propTypes","PropTypes","number","isRequired","func","Header","header","Title","CourseHeader","heading","Message","children","className","Card","style","padding","borderRadius","height","backdropFilter","lineHeight","boxShadow","maxWidth","ScoreContainer","slideInRight","fadeInUp","flash","section","Score","track","color","markLabel","fontSize","fontWeight","thumb","marginLeft","rail","opacity","mark","DurationMenu","setDuration","classes","durations","value","label","valueLabelFormat","displayText","forEach","current","Grid","container","item","md","sm","xs","Typography","float","marginTop","display","paddingTop","Slider","defaultValue","getAriaValueText","aria-labelledby","step","valueLabelDisplay","marks","onChange","event","userData","games","UserContext","createContext","Node","this","next","Queue","size","rear","front","currentSize","node","ChangingProgressProvider","state","valuesIndex","console","log","setState","values","length","Component","defaultProps","interval","RatingIcon","count","Array","fill","useSpeechRecognition","callback","window","SpeechRecognition","webkitSpeechRecognition","recognition","interimResults","addEventListener","delay","args","arguments","that","clearTimeout","setTimeout","apply","debounce","e","results","isFinal","input","transcript","includes","answer","isNaN","start","currentScore","left","backgroundColor","borderBottomRightRadius","currentScoreText","textAlign","justifyContent","paddingLeft","contained","frequency","score","freq","countValue","reduce","countValues","obj","kthPercentile","valueFrequencies","k","index","frequencyMap","n","bucketStartIndex","keys","arrayItem","push","i","bucketEndIndex","sortedNth","percentileTenth","numberMap","numberQueue","gameDetails","QuestionSection","game_details","g_id","u_id","numberOne","setNumberOne","numberTwo","setNumberTwo","numberThree","setNumberThree","response","setResponse","error","setError","gameDuration","setGameDuraion","setCount","percentile","setPercentile","isIntroduction","setIsIntroduction","game","setGame","setCalculatingScore","finalMessage","setFinalMessage","uuidv4","playId","setPlayId","speechInput","setSpeechInput","username","startTime","Date","toISOString","useContext","user","setUser","genrateValues","number2","number1","random","isFull","dequeue","enqueue","_handleSpeechInput","val","isValidMove","navigator","userAgent","indexOf","alert","onbeforeunload","preventDefault","returnValue","calculateLevel","message","challenger_score","genius_score","master_score","myPercentileEndRange","myPercentileStartRange","myPercentileValue","toFixed","myPercentile","name","marginBottom","variant","description","introduction","Button","textTransform","onClick","endIcon","src","arrowImage","arr","timerArray","percentage","styles","buildStyles","textColor","pathColor","trailColor","text","remainingTime","JSON","parse","stringify","_updateTime","alignItems","TextField","autoFocus","multiline","rowsMax","inputProps","maxLength","inputMode","target","alarm","payload","user_id","game_id","play_id","axios","post","then","updateScore","borderBottom","maxHeight","overflowY","map","clear","replayGame","Dashboard","Provider","SimpleCard","bullet","margin","transform","title","pos","inside","flexDirection","alignContent","marign","button","loading","setLoading","data","setData","msg","catch","exception","type","CardContent","App","domElement","getAttribute","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","document","querySelectorAll","Div","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.02c3f288.chunk.js","sourcesContent":["import { shake } from 'react-animations';\nimport styled, { keyframes } from 'styled-components';\n\nexport const ShakeAnimate = styled.div`\n  animation: 1.5s ${keyframes`${shake}`} 2;\n`;\n\nexport const TimeContainer = styled.h3`\n  padding: 4px;\n  margin: 0;\n  width: 100px;\n  text-align: center;\n  border-radius: 0%;\n  font-size: 36px;\n  border: ${(props) => `1px solid ${props.background}`};\n  font-family: 'Open Sans', sans-serif;\n  background: ${(props) => props.background};\n  color: white;\n  border-radius: 12px;\n  right: 10px;\n  position: relative;\n`;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport momentDurationFormatSetup from 'moment-duration-format';\nimport Card from '@material-ui/core/Card';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TimeContainer, ShakeAnimate } from './styled';\nimport ProgressBar from '@ramonak/react-progress-bar';\nmomentDurationFormatSetup(moment);\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n    position: 'relative',\n    top: '35px',\n  },\n});\n\nconst Timer = ({ duration, updateDuration }) => {\n  const classes = useStyles();\n  const [progress, setProgress] = React.useState(100);\n  const [time, setTime] = useState(Number(duration));\n  const [timerColor, setTimerColor] = useState('#2962ff');\n  const factor = Math.floor(duration / 100);\n  useEffect(() => {\n    const id = setInterval(() => {\n      if (time !== 0) {\n        setTime(time - 1);\n        if (time % factor === 0) setProgress(progress - 1);\n        changeColor();\n      }\n      updateDuration(time);\n    }, 1000);\n    return () => {\n      clearInterval(id);\n    };\n  }, [time]);\n\n  const changeColor = () => {\n    if (Number(duration) === 60) {\n      if (time === 15) setTimerColor('#dd2c00');\n      if (time === Math.round(Number(duration) / 2)) setTimerColor('darkorange');\n    } else {\n      if (time === Math.round(Number(duration) / 2)) setTimerColor('darkorange');\n      if (time === 60) setTimerColor('#dd2c00');\n    }\n  };\n\n  const displayTime = () => moment.duration(time, 'seconds').format('hh:mm:ss');\n\n  return <>{displayTime()}</>;\n};\n\nexport default Timer;\n\nTimer.propTypes = {\n  duration: PropTypes.number.isRequired,\n  updateDuration: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nconst Header = styled.header`\n  background: #3f51b5;\n  border-radius: 0px 0px 20px 20px;\n  color: white;\n  height: 200px;\n  font-weight: 600;\n  font-size: 28px;\n`;\n\nconst Title = styled.div`\n  padding: 64px 34px;\n`;\n\nexport { Header, Title };\n","import { Card, CardContent, Typography } from '@material-ui/core';\nimport React from 'react';\nimport { Header, Title } from './styled';\n\nconst CourseHeader = ({ heading }) => {\n  return (\n    <>\n      {/* <Card\n        style={{\n          background: 'transparent',\n          borderBottom: '3px solid #7482E8',\n          marginBottom: '10px',\n          backdropFilter: 'blur(4px)',\n        }}\n      >\n        <CardContent>\n          <Typography style={{ fontWeight: 600, color: '#5564CC' }} variant=\"h3\">\n            {heading}\n          </Typography>\n        </CardContent>\n      </Card> */}\n      <Header>\n        <Title>{heading}</Title>\n      </Header>\n    </>\n  );\n};\n\nexport default CourseHeader;\n","import { Card } from '@material-ui/core';\nimport React from 'react';\n\nconst Message = ({ children, className }) => (\n  <Card\n    style={{\n      padding: '12px 14px',\n      borderRadius: '14px',\n      height: '100%',\n      backdropFilter: 'blur(4px)',\n      lineHeight: '2em',\n      boxShadow: 'rgba(0, 0, 0, 0.16) 0px 10px 36px 0px, rgba(0, 0, 0, 0.06) 0px 0px 0px 1px',\n      maxWidth: 344,\n    }}\n    className={className}\n  >\n    {children}\n  </Card>\n);\n\nexport default Message;\n","import { slideInRight, fadeInUp, flash } from 'react-animations';\nimport styled, { keyframes } from 'styled-components';\n\nexport const SlideInRightAnimate = styled.div`\n  animation: 1s ${keyframes`${slideInRight}`} 1;\n`;\n\nexport const FadeInUpAnimate = styled.div`\n  animation: 1s ${keyframes`${fadeInUp}`} 1;\n`;\n\nexport const GameOverAnimate = styled.div`\n  animation: 1s ${keyframes`${flash}`} infinite;\n`;\n\nexport const ScoreContainer = styled.section`\n  border: 1px solid black;\n`;\n\nexport const Score = styled.div`\n  font-size: 2rem;\n  font-weight: 600;\n  color: #3fb599;\n`;\n","export default __webpack_public_path__ + \"static/media/above_average.1364f779.png\";","import React, { useEffect } from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport Slider from '@material-ui/core/Slider';\nimport { Card, Grid } from '@material-ui/core';\n\n\nconst useStyles = makeStyles({\n  track: {\n    color: '#3F51B5',\n    background: '#3F51B5',\n    height: '4px',\n  },\n\n  markLabel: {\n    fontSize: '16px',\n    fontWeight: 500,\n  },\n\n  thumb: {\n    width: '8px',\n    height: '24px',\n    borderRadius: '20px',\n    background: '#3F51B5',\n    top: 8,\n    marginLeft: -4,\n  },\n\n  rail: {\n    height: '4px',\n    background: '#3F51B5',\n    opacity: '0.2',\n  },\n\n  mark: {\n    width: '4px',\n    height: '4px',\n  },\n});\n\nexport default function DurationMenu({ setTime }) {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [duration, setDuration] = React.useState('5');\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const classes = useStyles();\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleItemClick = (event) => {\n    setAnchorEl(null);\n    const { duration } = event.currentTarget.dataset;\n    setDuration(duration);\n    setTime(Number(duration));\n  };\n\n  const durations = [\n    {\n      value: 0,\n      label: '1',\n    },\n    {\n      value: 50,\n      label: '3',\n    },\n    {\n      value: 100,\n      label: '5',\n    },\n  ];\n\n  function valuetext(value) {\n    return `${value / 10} mins`;\n  }\n\n  function valueLabelFormat(value) {\n    let displayText = '';\n    durations.forEach((current) => {\n      if (current.value === value) {\n        displayText = current.label;\n      }\n    });\n\n    return displayText;\n  }\n\n  return (\n    <Card\n      style={{\n        padding: '15px',\n        boxShadow: '#E8E8F3 0px 10px 36px 0px, #E8E8F3 0px 0px 0px 1px',\n        borderRadius: '14px',\n      }}\n    >\n      <Grid container>\n        <Grid item md={6} sm={6} xs={6}>\n          <Typography style={{ fontSize: '20px', fontWeight: '500' }}>Choose timing</Typography>\n        </Grid>\n        <Grid item md={6} sm={6} xs={6}>\n          <div style={{ fontSize: '20px', float: 'right', color: '#3F51B5', marginTop: '-5px' }}>\n            <Typography style={{ fontSize: '28px', fontWeight: '500', display: 'inline' }}>\n              {duration}\n            </Typography>\n            <Typography style={{ fontSize: '16px', fontWeight: '500', display: 'inline' }}>\n              {' '}\n              mins\n            </Typography>\n          </div>\n        </Grid>\n      </Grid>\n      <div style={{ paddingTop: '5px' }}>\n        <Slider\n          defaultValue={100}\n          valueLabelFormat={valueLabelFormat}\n          getAriaValueText={valuetext}\n          aria-labelledby=\"discrete-slider-restrict\"\n          step={null}\n          valueLabelDisplay=\"auto\"\n          marks={durations}\n          classes={{\n            ...classes,\n          }}\n          onChange={(event, value) => {\n            setDuration(valueLabelFormat(value));\n            setTime(Number(valueLabelFormat(value)) * 60);\n          }}\n        />\n      </div>\n    </Card>\n  );\n}\n","import React from 'react';\n\nexport const userData = {\n  id: 'sdkdf-34083xf-23nkf34',\n  games: [],\n};\n\nexport const UserContext = React.createContext(null);\n","class Node {\n  value;\n  next;\n  constructor(value) {\n    this.value = value;\n    this.next = null;\n  }\n}\n\nexport class Queue {\n  front;\n  rear;\n  size;\n  currentSize;\n\n  constructor(size) {\n    this.rear = null;\n    this.front = null;\n    this.size = size;\n    this.currentSize = 0;\n  }\n\n  isFull() {\n    if (this.currentSize >= this.size) {\n      return true;\n    }\n    return false;\n  }\n\n  enqueue(item) {\n    const node = new Node(item);\n    this.currentSize += 1;\n    if (this.rear === null) {\n      this.rear = node;\n      this.front = node;\n      return true;\n    }\n    this.rear.next = node;\n    this.rear = node;\n  }\n\n  dequeue() {\n    if (this.front === null) {\n      this.rear = null;\n      return;\n    }\n    const node = this.front;\n    this.front = this.front.next;\n\n    this.currentSize -= 1;\n    return node;\n  }\n\n  clear() {\n    this.front = null;\n    this.rear = null;\n    this.currentSize = 0;\n  }\n}\n","export default __webpack_public_path__ + \"static/media/quiz_board.bbfba0b2.svg\";","export default __webpack_public_path__ + \"static/media/question.06eaefea.svg\";","export default __webpack_public_path__ + \"static/media/excellent.45ee39bf.svg\";","export default __webpack_public_path__ + \"static/media/good.cd88e9a2.svg\";","export default __webpack_public_path__ + \"static/media/poor.fa42fa2e.svg\";","export default __webpack_public_path__ + \"static/media/arrow_forward.5acbbb4b.svg\";","export default __webpack_public_path__ + \"static/media/alarm.acf0c87a.svg\";","export default __webpack_public_path__ + \"static/media/replay.b386c5dd.svg\";","import React from 'react';\n\nclass ChangingProgressProvider extends React.Component {\n  static defaultProps = {\n    interval: 1000,\n  };\n\n  state = {\n    valuesIndex: 0,\n  };\n\n  componentDidMount() {\n    console.log(this.props.time);\n    setInterval(() => {\n      this.setState({\n        valuesIndex: (this.state.valuesIndex + 1) % this.props.values.length,\n      });\n    }, this.props.time * 10);\n  }\n\n  render() {\n    return this.props.children(this.props.values[this.state.valuesIndex]);\n  }\n}\n\nexport default ChangingProgressProvider;\n","import Star from '@material-ui/icons/Star';\nimport React from 'react';\n\nexport const RatingIcon = ({ count }) => {\n  return <div>{new Array(count).fill(<Star style={{ color: '#FFFF00' }} />)}</div>;\n};\n","import { debounce } from '../utilities/debounce';\n\nexport function useSpeechRecognition(callback) {\n  window.SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n\n  const recognition = new window.SpeechRecognition();\n  recognition.interimResults = true;\n\n  recognition.addEventListener(\n    'result',\n    debounce((e) => {\n      if (e.results[0].isFinal) {\n        const input = e.results[0][0].transcript;\n        if (input.includes('Clear') || input.includes('clear')) {\n          callback('');\n        }\n        const answer = Number(input);\n        if (!isNaN(answer)) callback(answer);\n      }\n    }, 500),\n  );\n\n  recognition.addEventListener('end', () => {\n    recognition.start();\n  });\n  recognition.start();\n}\n","export const debounce = (func, delay) => {\n  let id;\n  return function () {\n    const args = arguments;\n    const that = this;\n    clearTimeout(id);\n    id = setTimeout(() => func.apply(that, args), delay);\n  };\n};\n","import React, { useContext, useEffect, useRef, useState } from 'react';\nimport { Button, Card, Grid, TextField, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Timer from '../Timer';\nimport CourseHeader from '../CourseHeader';\nimport Message from '../Message';\nimport {\n  FadeInUpAnimate,\n  SlideInRightAnimate,\n  GameOverAnimate,\n  ScoreContainer,\n  Score,\n} from './styled';\nimport './style.css';\nimport Spinner from '../Spinner';\nimport SetTimer from '../Timer/Timer';\nimport { UserContext } from '../../Layout/Dashboard/UserContext';\nimport quiz from '../../../images/quiz_board.svg';\nimport question from '../../../images/question.svg';\nimport excellent from '../../../images/excellent.svg';\nimport good from '../../../images/good.svg';\nimport poor from '../../../images/poor.svg';\nimport { Queue } from '../../../utilities/Queue';\nimport { v4 as uuidv4 } from 'uuid';\nimport axios from 'axios';\nimport arrowImage from '../../../images/arrow_forward.svg';\nimport alarm from '../../../images/alarm.svg';\nimport replayGame from '../../../images/replay.svg';\nimport ChangingProgressProvider from '../Timer/ChangingProgressProvider';\nimport {\n  CircularProgressbar,\n  CircularProgressbarWithChildren,\n  buildStyles,\n} from 'react-circular-progressbar';\n\nimport 'react-circular-progressbar/dist/styles.css';\nimport { RatingIcon } from '../../RatingIcon';\nimport Star from '@material-ui/icons/Star';\nimport { useSpeechRecognition } from '../../../hooks/useSpeechRecognition';\n\nconst useStyles = makeStyles({\n  root: {\n    width: 60,\n    '& .MuiInputBase-root': {\n      fontSize: '2rem',\n    },\n  },\n  currentScore: {\n    position: 'absolute',\n    float: 'left',\n    top: 0,\n    left: 0,\n    width: 50,\n    height: 50,\n    backgroundColor: '#8D9EF8',\n    borderBottomRightRadius: 50,\n  },\n  currentScoreText: {\n    textAlign: 'left',\n    justifyContent: 'center',\n    paddingLeft: 10,\n    color: 'white',\n    fontWeight: 700,\n  },\n  contained: {\n    background: '#3F51B5',\n  },\n});\n\nconst frequency = [\n  { score: '24', freq: '5' },\n  { score: '36', freq: '9' },\n  { score: '41', freq: '12' },\n  { score: '57', freq: '6' },\n  { score: '62', freq: '8' },\n  { score: '68', freq: '5' },\n  { score: '72', freq: '14' },\n  { score: '81', freq: '5' },\n  { score: '93', freq: '3' },\n];\n\nlet countValue = frequency.reduce((countValues, obj) => (countValues += Number(obj.freq)), 0);\n\nconst sortedNth = (frequencyMap, n) => {\n  let bucketStartIndex = 0;\n  let keys = [];\n  frequency.forEach((arrayItem) => {\n    keys.push(Number(arrayItem.score));\n  });\n\n  let values = [];\n  frequency.forEach((arrayItem) => {\n    values.push(Number(arrayItem.freq));\n  });\n\n  for (let i = 0; i < keys.length; i += 1) {\n    let currentFrequency = values[i];\n    let bucketEndIndex = bucketStartIndex + currentFrequency;\n    if (n < bucketEndIndex) {\n      return keys[i];\n    }\n    bucketStartIndex = bucketEndIndex;\n  }\n\n  return keys[keys.length - 1];\n};\n\nconst kthPercentile = (valueFrequencies, k) => {\n  const index = (k / 100) * countValue;\n  return sortedNth(valueFrequencies, Math.floor(index));\n};\n\nlet percentileTenth = [];\nfor (let i = 0; i <= 100; i += 10) {\n  percentileTenth.push(Number(kthPercentile(frequency, i)));\n}\n\nconst myPercentile = (score) => {\n  let myPercentileEndRange = Number(percentileTenth.length - 1);\n  for (let i = 1; i < percentileTenth.length; i += 1) {\n    if (Number(score) < percentileTenth[i]) {\n      myPercentileEndRange = i;\n      break;\n    }\n  }\n\n  let myPercentileStartRange = myPercentileEndRange - 1;\n\n  const myPercentileValue = (\n    myPercentileStartRange * 10 +\n    ((score - percentileTenth[myPercentileStartRange] + 1) /\n      (percentileTenth[myPercentileEndRange] - percentileTenth[myPercentileStartRange] + 1)) *\n      10\n  ).toFixed(2);\n  return myPercentileValue < 0 ? 0 : myPercentileValue > 100 ? 100 : myPercentileValue;\n};\n\nlet numberMap = {};\nconst numberQueue = new Queue(7);\nlet gameDetails = {};\n\nconst QuestionSection = ({ game_details, g_id, u_id }) => {\n  const classes = useStyles();\n  const [numberOne, setNumberOne] = useState(0);\n  const [numberTwo, setNumberTwo] = useState(0);\n  const [numberThree, setNumberThree] = useState(0);\n  const [response, setResponse] = useState('');\n  const [error, setError] = useState(false);\n  const [time, setTime] = useState(Number(game_details.duration));\n  const [gameDuration, setGameDuraion] = useState(Number(game_details.duration));\n  const [count, setCount] = useState(0);\n  const [percentile, setPercentile] = useState(0);\n  const [isIntroduction, setIsIntroduction] = useState(true);\n  const [game, setGame] = useState(false);\n  const [calculatingScore, setCalculatingScore] = useState(true);\n  const [finalMessage, setFinalMessage] = useState('');\n  const [playId, setPlayId] = useState(uuidv4());\n  const [speechInput, setSpeechInput] = useState('');\n\n  let username = '';\n\n  if (game_details.username == null) {\n    username = '';\n  } else {\n    username = ' ' + game_details.username;\n  }\n\n  let startTime = new Date().toISOString();\n  const { user, setUser } = useContext(UserContext);\n\n  const genrateValues = () => {\n    let answer;\n    let number2 = 0;\n    let number1 = 0;\n    while (true) {\n      number1 = 2 + Math.floor(Math.random() * 8);\n      number2 = 2 + Math.floor(Math.random() * 8);\n      answer = number1 * number2;\n\n      if (number1 in numberMap === false) {\n        if (!numberQueue.isFull()) {\n          numberMap[number1] = 0;\n          numberQueue.enqueue(number1);\n        } else {\n          const node = numberQueue.dequeue();\n          delete numberMap[node.value];\n          numberQueue.enqueue(number1);\n          numberMap[number1] = 0;\n        }\n        break;\n      }\n    }\n\n    setNumberThree(number1);\n    setNumberTwo(answer);\n    setNumberOne(number2);\n  };\n\n  function request() {\n    var ws = new WebSocket('ws://localhost:8080/game');\n    ws.onopen = function () {\n      ws.send(JSON.stringify({ message: 'hello server!' }));\n    };\n    ws.onmessage = function (event) {\n      var m = JSON.parse(event.data);\n      console.debug('Received message', m.message);\n    };\n    ws.onerror = function (event) {\n      console.debug(event);\n    };\n  }\n\n  const _handleSpeechInput = (val) => {\n    setSpeechInput(val);\n  };\n\n  useEffect(() => {\n    isValidMove(speechInput);\n  }, [speechInput]);\n\n  useEffect(() => {\n    // request();\n    //\n    if (navigator.userAgent.indexOf('Chrome') === -1) {\n      alert('Switch to Chrome/Edge for speech input');\n    } else {\n      useSpeechRecognition(_handleSpeechInput);\n    }\n    window.onbeforeunload = (event) => {\n      const e = event || window.event;\n      e.preventDefault();\n\n      if (e) {\n        e.returnValue = '';\n      }\n      return '';\n    };\n    genrateValues();\n  }, []);\n\n  const isValidMove = (event) => {\n    setResponse(event);\n    if (isNaN(event)) {\n      setError(false);\n    } else if (event !== numberTwo) {\n      setError(true);\n    } else {\n      setTimeout(() => {\n        setResponse('');\n        genrateValues();\n      }, 300);\n      setError(false);\n      setCount(count + 1);\n    }\n  };\n\n  const LEVELS = {\n    CHALLENGER: 'CHALLENGER',\n    MASTER: 'MASTER',\n    GENIUS: 'GENIUS',\n    STARTER: 'STARTER',\n    KIDDO: 'KIDDO',\n  };\n\n  const ScoreLevels = {\n    FIVE: {\n      50: LEVELS.STARTER,\n      60: LEVELS.CHALLENGER,\n      70: LEVELS.MASTER,\n      80: LEVELS.GENIUS,\n    },\n\n    ONE: {\n      10: LEVELS.CHALLENGER,\n      20: LEVELS.MASTER,\n      30: LEVELS.GENIUS,\n    },\n\n    THREE: {\n      30: LEVELS.STARTER,\n      40: LEVELS.CHALLENGER,\n      50: LEVELS.MASTER,\n      60: LEVELS.GENIUS,\n    },\n    getLevel(time) {\n      return this[time];\n    },\n  };\n\n  const ratingLevel = (level) => {\n    switch (level) {\n      case LEVELS.GENIUS:\n        return 5;\n      case LEVELS.MASTER:\n        return 4;\n      case LEVELS.CHALLENGER:\n        return 3;\n      case LEVELS.STARTER:\n        return 2;\n      default:\n        return 1;\n    }\n  };\n\n  const calculateLevel = () => {\n    let message = `Hi ${username}, Challenge yourself! You are currently at the STARTER level. Aim for ${game_details.challenger_score} to go to the CHALLENGER LEVEL.`;\n\n    switch (true) {\n      case count >= Number(game_details.genius_score):\n        message =\n          'Hi' +\n          username +\n          ', you were born to be genius! You are at the highest level now. But geniuses never stop, if you want to go further, keep practicing, keep going higher.';\n\n        break;\n      case count >= Number(game_details.master_score):\n        message =\n          'Hi MASTER' +\n          username +\n          ', you are at MASTER level now, Congrats! soon to become a Genius! Master this a little more. Aim for ' +\n          game_details.genius_score +\n          ' and go to the GENIUS LEVEL.';\n        break;\n      case count >= Number(game_details.challenger_score):\n        message =\n          'Hi' +\n          username +\n          ', you are a CHALLENGER now! You are soon to become a Master! Challenge yourself a little more. Aim for ' +\n          game_details.master_score +\n          ' and go to the MASTER LEVEL.';\n        break;\n      default:\n        setFinalMessage(message);\n        break;\n    }\n    setFinalMessage(message);\n    console.log(message);\n    console.log(count);\n    setCalculatingScore(false);\n    setPercentile(myPercentile(count));\n  };\n\n  function replay() {\n    startTime = new Date().toISOString();\n    numberQueue.clear();\n    numberMap = {};\n    setUser(gameDetails);\n    setResponse('');\n    gameDetails = {};\n    setCount(0);\n    setGame(true);\n    setError(false);\n    setCalculatingScore(true);\n    setFinalMessage('');\n    setPlayId(uuidv4());\n  }\n\n  const moveToGame = () => {\n    startTime = new Date().toISOString();\n    setIsIntroduction(false);\n    setGame(true);\n  };\n\n  const setGameTime = (time) => {\n    setTime(time);\n    setGameDuraion(time);\n  };\n\n  function _updateTime(remainingTime) {\n    setTime(remainingTime);\n    if (remainingTime <= 0) {\n      setGame(false);\n      calculateLevel();\n      gameDetails = JSON.parse(JSON.stringify(user));\n      gameDetails.games.push({ duration: gameDuration, startTime: startTime, score: count });\n    }\n  }\n\n  const percentileImage = () => {\n    if (percentile >= 85) return <img src={excellent} />;\n    if (percentile > 60 && percentile < 85) return <img src={good} />;\n    if (percentile < 60) return <img src={poor} />;\n  };\n\n  const updateScore = (playId, count, percentile, gameDuration) => {\n    const userId = Number(u_id);\n\n    const payload = {\n      user_id: userId,\n      game_id: g_id,\n      play_id: playId,\n      score: count,\n      percentile: percentile,\n      duration: gameDuration,\n    };\n\n    axios\n      .post(`https://profved.com/wp-json/wp-json/wp/v1/games/`, { payload })\n      .then((response) => {});\n  };\n\n  const timerArray = () => {\n    const arr = new Array();\n    for (let i = 100; i >= 0; i--) {\n      arr.push(i);\n    }\n    return arr;\n  };\n\n  return (\n    <>\n      <CourseHeader heading={game_details.name} />\n      {isIntroduction ? (\n        <div style={{ padding: '0 1rem', position: 'relative', top: '-41px' }}>\n          <Message>\n            <Typography style={{ fontWeight: 500, color: 'black', marginBottom: 10 }} variant=\"h5\">\n              {game_details.description}\n            </Typography>\n            <ul>\n              <li>\n                <Typography variant=\"h6\" style={{ fontWeight: '400' }}>\n                  {game_details.introduction}\n                </Typography>\n              </li>\n            </ul>\n            {/* </div> */}\n          </Message>\n          <div className=\"start-game-container\" style={{ position: 'relative', top: '40px' }}>\n            <SetTimer setTime={setGameTime} />\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              style={{ marginTop: 10, borderRadius: '8px', textTransform: 'none' }}\n              onClick={moveToGame}\n              classes={{ contained: classes.contained }}\n              endIcon={<img src={arrowImage}></img>}\n            >\n              <Typography variant=\"h6\" style={{ fontWeight: '600' }}>\n                Let's Go\n              </Typography>\n            </Button>\n          </div>\n        </div>\n      ) : game ? (\n        <div style={{ padding: '0 1rem', position: 'relative', top: '-41px' }}>\n          <Message>\n            <Grid container>\n              <Grid item md={6} sm={6} xs={6}>\n                <div style={{ height: '100px', width: '100px' }}>\n                  <ChangingProgressProvider values={timerArray()} time={gameDuration}>\n                    {(percentage) => (\n                      <CircularProgressbar\n                        styles={buildStyles({\n                          textColor: '#3F51B5',\n                          pathColor: '#3F51B5',\n                          trailColor: '#3F51B532',\n                        })}\n                        value={percentage}\n                        text={\n                          <Timer\n                            duration={gameDuration}\n                            updateDuration={(remainingTime) => _updateTime(remainingTime)}\n                          />\n                        }\n                      />\n                    )}\n                  </ChangingProgressProvider>\n                </div>\n              </Grid>\n              <Grid item md={6} sm={6} xs={6}>\n                <Typography variant=\"h5\">\n                  Score<Score>{count}</Score>\n                </Typography>\n              </Grid>\n            </Grid>\n          </Message>\n          <div style={{ position: 'relative', top: '40px' }}>\n            <Message>\n              <Typography style={{ fontWeight: '500' }} variant=\"h5\">\n                Question{' '}\n                <span style={{ color: '#3F51B5', fontWeight: 600, fontSize: '24px' }}>\n                  {count + 1}\n                </span>\n              </Typography>\n              <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                <Grid style={{ padding: '16px' }}>\n                  <Typography\n                    variant=\"h4\"\n                    display=\"inline\"\n                    style={{ padding: 5, fontWeight: '500' }}\n                  >\n                    {numberThree}\n                  </Typography>\n                  <Typography\n                    variant=\"h4\"\n                    display=\"inline\"\n                    style={{ padding: 5, fontWeight: '500' }}\n                  >\n                    x\n                  </Typography>\n                  <Typography\n                    variant=\"h4\"\n                    display=\"inline\"\n                    style={{ padding: 5, fontWeight: '500' }}\n                  >\n                    {numberOne}\n                  </Typography>\n                  <Typography\n                    variant=\"h4\"\n                    display=\"inline\"\n                    style={{ padding: 5, fontWeight: '500' }}\n                  >\n                    =\n                  </Typography>\n                  <Typography\n                    variant=\"h4\"\n                    display=\"inline\"\n                    style={{ padding: 5, fontWeight: '500' }}\n                  >\n                    <TextField\n                      autoFocus\n                      multiline={false}\n                      rowsMax={1}\n                      className={classes.root}\n                      inputProps={{\n                        style: {\n                          padding: 0,\n                          textAlign: 'center',\n                        },\n                        maxLength: 3,\n                        inputMode: 'numeric',\n                      }}\n                      error={error}\n                      value={response}\n                      onChange={(event) => isValidMove(Number(event.target.value))}\n                    />\n                  </Typography>\n                </Grid>\n              </div>\n            </Message>\n          </div>\n          {/* </FadeInUpAnimate> */}\n        </div>\n      ) : (\n        <div style={{ padding: '0 1rem', position: 'relative', top: '-41px' }}>\n          <Message>\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n              <div style={{ fontSize: '20px', fontWeight: 500 }}>Time’s up!</div>\n              <img src={alarm} />\n            </div>\n          </Message>\n\n          <div style={{ position: 'relative', top: '40px' }}>\n            <Message className={'primary-color-bg'}>\n              <div style={{ textAlign: 'center' }}>\n                {updateScore(playId, count, percentile, Number(game_details.duration))}\n\n                <Typography\n                  variant=\"h6\"\n                  style={{ color: 'white', fontSize: '24px' }}\n                  display=\"inline\"\n                >\n                  Your score:{' '}\n                </Typography>\n                <Typography\n                  variant=\"h6\"\n                  style={{ color: 'white', fontSize: '36px', fontWeight: 600 }}\n                  display=\"inline\"\n                >\n                  {count}\n                </Typography>\n\n                <RatingIcon count={5} />\n\n                <Typography variant=\"h5\" style={{ color: 'white', fontSize: '24px' }}>\n                  {finalMessage}\n                </Typography>\n\n                {user.games.length > 0 && (\n                  <ScoreContainer>\n                    <Typography variant=\"h5\">\n                      <div style={{ borderBottom: '1px solid black' }}>Previous Scores</div>\n\n                      <div style={{ maxHeight: '150px', overflowY: 'auto' }}>\n                        {user.games.map((game) => {\n                          return (\n                            <li>\n                              Duration: {Number(game.duration) / 60} mins, Score: {game.score}\n                            </li>\n                          );\n                        })}\n                      </div>\n                    </Typography>\n                  </ScoreContainer>\n                )}\n              </div>\n            </Message>\n\n            <div className=\"start-game-container\">\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                style={{ marginTop: 10, borderRadius: '8px', textTransform: 'none' }}\n                onClick={replay}\n                classes={{ contained: classes.contained }}\n                endIcon={<img src={replayGame}></img>}\n              >\n                <Typography variant=\"h6\">Replay</Typography>\n              </Button>\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default QuestionSection;\n","import React, { useEffect, useState } from 'react';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { Container, Grid } from '@material-ui/core';\nimport Timer from '../../Quiz/Timer';\nimport QuestionSection from '../../Quiz/QuestionSection';\nimport './style.css';\nimport { UserContext, userData } from './UserContext';\nimport quiz from '../../../images/quiz_board.svg';\nimport axios from 'axios';\nimport Loader from 'react-loader-spinner';\n\nexport const Dashboard = ({ g_id, u_id }) => {\n  const [user, setUser] = useState(userData);\n  return (\n    <UserContext.Provider value={{ user, setUser }}>\n      <SimpleCard g_id={g_id} u_id={u_id} />\n    </UserContext.Provider>\n  );\n};\n\nconst useStyles = makeStyles({\n  root: {\n    width: 900,\n    backgroundColor: '#F5F7FA',\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  inside: {\n    flexDirection: 'row',\n    display: 'flex',\n    height: '60%',\n    alignContent: 'center',\n    justifyContent: 'center',\n    marign: '0px 20px',\n  },\n  button: {\n    width: '100%',\n    height: '100%',\n  },\n});\n\nfunction SimpleCard({ g_id, u_id }) {\n  const classes = useStyles();\n  const bull = <span className={classes.bullet}>•</span>;\n  const [loading, setLoading] = useState(true);\n  const [data, setData] = useState();\n\n  useEffect(() => {\n    if (loading) {\n      const payload = {\n        game_id: g_id,\n        user_id: u_id,\n      };\n\n      axios\n        .post('https://profved.com/wp-json/wp/v1/game_meta_data', { payload })\n        .then((response) => {\n          setData(response.data.msg[0]);\n          setLoading(false);\n        })\n        .catch((exception) => {\n          console.log(exception);\n          setLoading(false);\n        });\n    }\n  });\n\n  return (\n    <>\n      {loading ? (\n        <Card\n          style={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            borderRadius: '16px',\n            boxShadow: 'rgba(0, 0, 0, 0.16) 0px 10px 36px 0px, rgba(0, 0, 0, 0.06) 0px 0px 0px 1px',\n          }}\n        >\n          <Loader type=\"Oval\" color=\"#3F51B5\" height={120} width={200}  />\n        </Card>\n      ) : (\n        <>\n          {/* <Paper\n            variant=\"outlined\"\n            style={{ display: 'flex', flexDirection: 'row', backgroundColor: '#F5F7FA' }}\n          > */}\n          <Grid>\n            <Grid item md={12} className=\"widget-container\">\n              <Card style={{ boxShadow: 'none' }}>\n                <CardContent style={{ padding: '0 0 24px 0' }} className=\"dashboard-background\">\n                  <QuestionSection game_details={data} g_id={g_id} u_id={u_id} />\n                </CardContent>\n              </Card>\n            </Grid>\n          </Grid>\n          {/* </Paper> */}\n        </>\n      )}\n    </>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { Grid } from '@material-ui/core';\nimport { Dashboard } from './Components/Layout/Dashboard';\nimport Quiz from './Components/Quiz/Quiz';\nimport './style.css';\nimport 'animate.css';\n\nexport default function App({ domElement }) {\n  const g_id = domElement.getAttribute('data-game-id');\n  let u_id = domElement.getAttribute('data-user-id');\n  if (u_id === '0') {\n    u_id = '-1';\n  }\n  return (\n    <Grid container>\n      <Dashboard g_id={g_id} u_id={u_id} />\n    </Grid>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// Find all widget divs\nconst WidgetDivs = document.querySelectorAll('.quiz_widget')\n\nWidgetDivs.forEach(Div => {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App domElement={Div} />\n    </React.StrictMode>,\n    Div\n  );\n})\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}